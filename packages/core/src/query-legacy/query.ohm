QueryLang {

  Query = OrQuery OrderByClause? LimitClause?

  sourceCharacter = any

  lineTerminator = "\n" | "\r" | "\u2028" | "\u2029"

  identifier = ~reservedWord identifierName
  identifierName = identifierStart identifierPart*

  identifierStart = letter | "$" | "_" 
  identifierPart = identifierStart | digit

  reservedWord = keyword
  keyword = kwMy | kwOpp | kwAll | kwCharacter | kwSummon
    | kwCombat | kwSupport | kwStatus | kwEquipment | kwAny
    | kwActive | kwPrev | kwNext | kwStandby | kwIncludes 
    | kwDefeated | kwWeapon | kwElement | kwNation | kwWith
    | kwTag | kwId | kwDefinition | kwAt | kwHas
    | kwRecentFrom | kwOrderBy | kwLimit | kwNot | kwAnd
    | kwOr | kwOf

  stringLiteral = "\"" doubleStringCharacter* "\""
  doubleStringCharacter = ~("\"" | "\\" | lineTerminator) sourceCharacter -- nonEscape
    | "\\" escapeSequence --escape
    
  escapeSequence = "\"" | "\\" | "b" | "f" | "n" | "r" | "t" | "v"

  numericLiteral = decimalIntegerLiteral "." decimalDigit* --bothParts
    | "." decimalDigit+     -- decimalsOnly
    | decimalIntegerLiteral -- integerOnly
  decimalIntegerLiteral = nonZeroDigit decimalDigit* -- nonZero
    | "0"  -- zero
  decimalDigit = "0".."9"
  nonZeroDigit = "1".."9"

  kwMy = "my" ~identifierPart
  kwOpp = "opp" ~identifierPart
  kwAll = "all" ~identifierPart
  kwCharacter = "character" "s"? ~identifierPart
  kwSummon = "summon" "s"? ~identifierPart
  kwCombat = "combat" "s"? ~identifierPart
  kwSupport = "support" "s"? ~identifierPart
  kwStatus = "status" "es"? ~identifierPart
  kwEquipment = "equipment" "s"? ~identifierPart
  kwCard = "card" "s"? ~identifierPart
  kwAny = "any" ~identifierPart
  kwActive = "active" ~identifierPart
  kwPrev = "prev" ~identifierPart
  kwNext = "next" ~identifierPart
  kwStandby = "standby" ~identifierPart
  kwIncludes = "include" "s"? ~identifierPart
  kwDefeated = "defeated" ~identifierPart
  kwHand = "hand" "s"? ~identifierPart
  kwPile = "pile" ~identifierPart
  kwWeapon = "weapon" ~identifierPart
  kwElement = "element" ~identifierPart
  kwNation = "nation" ~identifierPart
  kwWith = "with" ~identifierPart
  kwTag = "tag" "s"? ~identifierPart
  kwId = "id" ~identifierPart
  kwDefinition = "definition" ~identifierPart
  kwAt = "at" ~identifierPart
  kwHas = "has" ~identifierPart
  kwRecentFrom = "recent" space "opp" space "from" ~identifierPart
  kwOrderBy = "order" space "by" ~identifierPart
  kwLimit = "limit" ~identifierPart
  kwNot = "not" ~identifierPart
  kwAnd = "and" ~identifierPart
  kwOr = "or" ~identifierPart
  kwOf = "of" ~identifierPart

  PropertyName = identifier | stringLiteral 
  ExternalPropertyName = identifier | decimalIntegerLiteral

  PrimaryExpression = PropertyName
    | numericLiteral
    | "(" Expression ")" -- paren
  UnaryExpression = "-" UnaryExpression -- neg
    | PrimaryExpression
  MultiplicativeExpression = MultiplicativeExpression "*" UnaryExpression -- mul
    | MultiplicativeExpression "/" UnaryExpression -- div
    | UnaryExpression
  AdditiveExpression = AdditiveExpression "+" MultiplicativeExpression -- add
    | AdditiveExpression "-" MultiplicativeExpression -- sub
    | MultiplicativeExpression
  Expression = AdditiveExpression

  PrimaryQuery = WhoSpecifier? TypeSpecifier WithSpecifier? -- canonical
    | WhoSpecifier? WithSpecifier -- canonicalAny
    | "@" NonemptyListOf<ExternalPropertyName, "."> -- external
    | "(" Query ")" -- paren
  WhoSpecifier = kwAll? kwMy -- my
    | kwAll? kwOpp -- opp
    | kwAll -- all
  TypeSpecifier = GeneralCharacterSpecifier | EntitySpecifier | CardSpecifier
  GeneralCharacterSpecifier = CharacterSpecifier (kwIncludes kwDefeated)? -- mayIncDeath
    | kwDefeated CharacterSpecifier -- onlyDeath
  CharacterSpecifier = kwCharacter -- plain
    | PositionSpecifier kwCharacter? -- position
  PositionSpecifier = kwActive | kwPrev | kwNext | kwStandby
  EntitySpecifier = kwSummon -- summon
    | kwCombat kwStatus -- combatStatus
    | kwStatus -- status
    | kwSupport -- support
    | kwEquipment -- equipment
    | kwAny -- any
  CardSpecifier = kwCard -- all
    | kwHand kwCard? -- hands
    | kwPile kwCard? -- pile

  WithSpecifier = kwWith WithBody

  WithBody = kwId "="? Expression    -- id
    | kwDefinition kwId "="? Expression -- defId
    | kwTag TagSpecifier -- tag
    | PropertyName relativeOperator Expression -- prop
    
  relativeOperator = ">=" | "<=" | "!=" | "=" | ">" | "<"

  TagSpecifier = "(" NonemptyListOf<identifierName, ","> ")" -- direct
    | TagQualifier? kwOf "(" Query ")" -- indirect
    
  TagQualifier = kwWeapon | kwElement | kwNation

  UnaryQuery = kwNot UnaryQuery -- not
    | kwRecentFrom UnaryQuery -- recentFrom
    | kwHas UnaryQuery -- has
    | kwAt UnaryQuery -- at
    | PrimaryQuery
  RelationalQuery = RelationalQuery kwHas UnaryQuery -- has
    | RelationalQuery kwAt UnaryQuery -- at
    | UnaryQuery
  AndQuery = AndQuery kwAnd RelationalQuery -- and
    | RelationalQuery
  OrQuery = OrQuery kwOr AndQuery -- or
    | AndQuery


  OrderByClause = kwOrderBy NonemptyListOf<Expression, ",">
  LimitClause = kwLimit decimalIntegerLiteral
}
